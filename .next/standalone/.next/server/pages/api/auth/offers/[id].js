"use strict";(()=>{var e={};e.id=7140,e.ids=[7140],e.modules={3524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},2485:(e,t,r)=>{r.r(t),r.d(t,{config:()=>o,default:()=>u,routeModule:()=>l});var a={};r.r(a),r.d(a,{default:()=>handler});var i=r(1802),s=r(7153),d=r(6249),n=r(5066);async function handler(e,t){let r=parseInt(e.query.id,10);if(isNaN(r))return t.status(400).json({error:"Invalid ID"});if("GET"===e.method){let e=await n.Z.offer.findUnique({where:{id:r}});return e?t.status(200).json(e):t.status(404).end()}if("PUT"===e.method){let a=await n.Z.offer.update({where:{id:r},data:e.body});return t.status(200).json(a)}return"DELETE"===e.method?(await n.Z.offer.delete({where:{id:r}}),t.status(204).end()):(t.setHeader("Allow",["GET","PUT","DELETE"]),t.status(405).end())}let u=(0,d.l)(a,"default"),o=(0,d.l)(a,"config"),l=new i.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/auth/offers/[id]",pathname:"/api/auth/offers/[id]",bundlePath:"",filename:""},userland:a})},5066:(e,t,r)=>{r.d(t,{Z:()=>s});var a=r(3524);let i=new a.PrismaClient,s=i}};var t=require("../../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[4222],()=>__webpack_exec__(2485));module.exports=r})();