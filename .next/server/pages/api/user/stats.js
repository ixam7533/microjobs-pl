"use strict";(()=>{var e={};e.id=7652,e.ids=[7652],e.modules={3524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},2559:(e,r,t)=>{t.r(r),t.d(r,{config:()=>d,default:()=>u,routeModule:()=>c});var a={};t.r(a),t.d(a,{default:()=>handler});var n=t(1802),i=t(7153),s=t(6249),o=t(3524);let l=new o.PrismaClient;async function handler(e,r){if("GET"!==e.method)return r.status(405).json({error:"Method not allowed"});try{let{email:t}=e.query;if(!t||"string"!=typeof t)return r.status(400).json({error:"Email is required"});let a=await l.user.findUnique({where:{email:t}});if(!a)return r.status(404).json({error:"User not found"});let n=await l.offer.count({where:{contactEmail:t}}),i=await l.offer.count({where:{contactEmail:t,promoted:!0}}),s=0,o=0;try{let e=await l.rating.findMany({where:{reviewed:{email:t}},select:{rating:!0}});o=(s=e.length)>0?e.reduce((e,r)=>e+r.rating,0)/s:0}catch(e){console.log("Rating model not available, skipping ratings")}let u=a.name||a.email.split("@")[0];r.status(200).json({userName:u,totalOffers:n,activeOffers:i,averageRating:o,totalRatings:s,memberSince:a.createdAt})}catch(e){console.error("Error fetching user stats:",e),r.status(500).json({error:"Internal server error"})}}let u=(0,s.l)(a,"default"),d=(0,s.l)(a,"config"),c=new n.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/user/stats",pathname:"/api/user/stats",bundlePath:"",filename:""},userland:a})}};var r=require("../../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[4222],()=>__webpack_exec__(2559));module.exports=t})();